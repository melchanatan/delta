import numpy as np
import math
from visual_kinematics.RobotDelta import RobotDelta
from visual_kinematics.Frame import Frame
from visual_kinematics.RobotTrajectory import RobotTrajectory

# Define Delta robot parameters [r1, r2, l1, l2]
robot = RobotDelta(np.array([0.16, 0.06, 0.30, 0.50]), object_pos=[.1, .3, .1], object_speed=0.02)
# visualize
# robot.ws_lim = np.array([[-math.pi/12, math.pi/2]]*3)
# robot.ws_division = 10
# robot.show(ws=True)
# print(robot.ws_lim)

x,y,z =-0.4,-0.2,-0.5
x_old,y_old,z_old = -0.4,-0.2,-0.5
while True:
    x = x+0.1 # -0.4 to 0.4
    # y = y+0.1 # -0.3 to 0.3
    #z = z-0.1 # -0.5
    if x > 0.3: x = 0.29
    if x < -0.3: x = -0.29
    if y > 0.2: y = 0.19
    if y < -0.2:y=-0.19
    # Define trajectory frames
    frames = [
        Frame.from_euler_3(np.array([0., 0., 0.]), np.array([[x_old], [y_old], [z_old]])),
        Frame.from_euler_3(np.array([0., 0., 0.]), np.array([[x], [y], [z]])),
    ]
    trajectory = RobotTrajectory(robot, frames)

    # Define object motion parameters
    x_ob1, y_ob1, z_ob1 = 0.0, 0.0, -0.03
    x_ob2, y_ob2, z_ob2 = 0.02, 0.02, -0.04

    trajectory.move_with_speed(speed=0.1, motion="p2p", object_speed=robot.object_speed)
                           


    x_old,y_old,z_old = x,y,z
    print(x,y,z)

